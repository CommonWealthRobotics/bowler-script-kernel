buildscript {
	ext {
		springBootVersion = '1.2.7.RELEASE'
	}
	repositories {
		[
			maven {
				url "https://repo1.maven.org/maven2/"
			},
			//jcenter(),
			mavenCentral(),
			maven {
				url "https://plugins.gradle.org/m2/"
			},
			mavenLocal()
		]
	}

	dependencies {
		classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
	}
	//	dependencies {
	//		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	//		classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
	//	}commons-io
}

apply plugin: 'com.github.johnrengelman.shadow'

apply plugin: 'java'
apply plugin: 'signing'
if (project == rootProject) {
	apply plugin: 'maven'
}
apply plugin: 'java-library'


//apply plugin: 'spring-boot'
//apply plugin: 'io.spring.dependency-management'


[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceSets {

	test {
		java {
			srcDirs = [
				"test/java/src" ]  // Note @Peter's comment below
		}
	}
}


// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.

File buildDir = file(".");

Properties props = new Properties()
props.load(new FileInputStream(buildDir.getAbsolutePath()+"/src/main/resources/com/neuronrobotics/bowlerkernel/build.properties"))

boolean is64Bit() {
	////System.out.println("Arch: "+getOsArch());
	return getOsArch().startsWith("x86_64") || getOsArch().startsWith("amd64");
}
boolean isARM() {
	return getOsArch().startsWith("arm");
}
boolean isCortexA8(){
	if(isARM()){
		//TODO check for cortex a8 vs arm9 generic
		return true;
	}
	return false;
}
boolean isWindows() {
	////System.out.println("OS name: "+getOsName());
	return getOsName().toLowerCase().startsWith("windows") ||getOsName().toLowerCase().startsWith("microsoft") || getOsName().toLowerCase().startsWith("ms");
}

boolean isLinux() {
	return getOsName().toLowerCase().startsWith("linux");
}

boolean isOSX() {
	return getOsName().toLowerCase().startsWith("mac");
}

String getExtension() {
	if(isWindows()) {
		return ".dll";
	}

	if(isLinux()) {
		return ".so";
	}

	if(isOSX()) {
		return ".jnilib";
	}

	return "";
}

String getOsName() {
	return System.getProperty("os.name");
}

String getOsArch() {
	return System.getProperty("os.arch");
}

//https://oss.sonatype.org/service/local/repositories/releases/content/com/neuronrobotics/nrjavaserial/3.10.1/nrjavaserial-3.10.1.jar


repositories {
	mavenCentral()
	maven {
		url 'https://mlt.jfrog.io/artifactory/mlt-mvn-releases-local/'
	}
	maven { url 'https://repo.maven.apache.org/maven2/' }

	maven { url 'https://repo1.maven.org/maven2/'}
	//https://jcenter.bintray.com<
	maven { url 'https://jcenter.bintray.com/'}

	//jcenter()
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots/'  }
	//maven { url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'  }
	maven { url 'https://oss.sonatype.org/content/repositories/releases/'  }
	//com.neuronrobotics hosting point
	maven { url 'https://oss.sonatype.org/content/repositories/staging/' }

	maven {
		url "https://repo.myrobotlab.org/artifactory/myrobotlab/"
		content {
			includeGroup("de.dfki.mary")
		}
	}
	maven { url 'https://maven-central.storage-download.googleapis.com/repos/central/data/'}
	maven {url 'https://repo.jenkins-ci.org/public/'}
}

dependencies {

	api 'com.neuronrobotics:JavaCad:1.4.1'
	api project('java-bowler')
	api project('GithubPasswordManager:GithubPasswordManager')

	//compile group: "de.swirtz", name: "ktsRunner", version: "0.0.7"
	api 'us.ihmc:jinput:2.0.6-ihmc2'
	api group: 'us.ihmc', name: 'ihmc-native-library-loader', version: '1.3.1'

	api 'com.google.crypto.tink:tink:1.3.0-rc1'

	api group: 'org.json', name: 'json', version: '20180813'

	api 'gov.nist.math:jama:1.0.2'

	api group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.6'

	api group: 'org.reactfx', name: 'reactfx', version: '2.0-SNAPSHOT'

	// https://mvnrepository.com/artifact/org.apache.groovy/groovy
	api group: 'org.apache.groovy', name: 'groovy', version: '4.0.22'
	//make grapes work
	api group: 'org.apache.ivy', name: 'ivy', version: '2.5.1'

	//compile group: 'org.controlsfx', name: 'controlsfx', version: '8.0.6'
	api group: 'commons-lang', name: 'commons-lang', version: '2.6'
	api group: 'commons-codec', name: 'commons-codec', version: '1.7'

	// https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit
	api group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.13.1.202206130422-r'
	// https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit.ssh.apache
	api group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.ssh.apache', version: '5.13.1.202206130422-r'

	// https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
	api group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.2.1'

	api group: 'com.squareup.okhttp', name: 'okhttp-urlconnection', version: '2.0.0'
	api group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
	api group: 'com.infradna.tool', name: 'bridge-method-injector', version: '1.14'

	api 'com.miglayout:miglayout-swing:4.2'
	api 'commons-io:commons-io:2.6'
	api group:'org.python',name:'jython',version:'2.5.3'
	api group:'org.python',name:'jython-standalone',version:'2.5.2'
	api 'org.clojure:clojure:1.8.0'
	// jetty server
	api "org.eclipse.jetty:jetty-server:9.0.2.v20130417"
	api "org.eclipse.jetty:jetty-servlet:9.0.2.v20130417"
	api "org.eclipse.jetty:jetty-servlets:9.0.2.v20130417"
	api "org.eclipse.jetty:jetty-webapp:9.0.2.v20130417"
	api "javax.servlet:javax.servlet-api:3.1.0"
	api group: 'java3d', name: 'vecmath', version: '1.3.1'
	api 'org.slf4j:slf4j-simple:1.6.1'


	api group:'de.huxhorn.sulky', name:'de.huxhorn.sulky.3rdparty.jlayer', version:'1.0'
	api 'com.google.code.gson:gson:2.5'
	api 'org.jsoup:jsoup:1.8.3'
	api 'org.apache.httpcomponents:httpclient:4.5.1'

	api 'com.github.kurbatov:firmata4j:2.3.4.1'


	testImplementation 'junit:junit:4.10'
	api group: 'com.github.stephengold', name: 'jbullet', version: '1.0.3'

	implementation('de.dfki.mary:voice-cmu-slt-hsmm:5.2.1') {
		exclude group: 'commons-io', module: 'commons-io'
		exclude group: 'com.twmacinta', module: 'fast-md5'
		exclude group: 'gov.nist.math', module: 'Jampack'
	}
	implementation('de.dfki.mary:voice-dfki-poppy-hsmm:5.2') {
		exclude group: 'commons-io', module: 'commons-io'
		exclude group: 'com.twmacinta', module: 'fast-md5'
		exclude group: 'gov.nist.math', module: 'Jampack'
	}

	implementation('de.dfki.mary:voice-dfki-prudence-hsmm:5.2') {
		exclude group: 'commons-io', module: 'commons-io'
		exclude group: 'com.twmacinta', module: 'fast-md5'
		exclude group: 'gov.nist.math', module: 'Jampack'
	}
	implementation('de.dfki.mary:voice-dfki-spike-hsmm:5.2') {
		exclude group: 'commons-io', module: 'commons-io'
		exclude group: 'com.twmacinta', module: 'fast-md5'
		exclude group: 'gov.nist.math', module: 'Jampack'
	}
	implementation('de.dfki.mary:voice-cmu-rms-hsmm:5.2') {
		exclude group: 'commons-io', module: 'commons-io'

		exclude group: 'com.twmacinta', module: 'fast-md5'
		exclude group: 'gov.nist.math', module: 'Jampack'
	}
	implementation('de.dfki.mary:voice-dfki-obadiah-hsmm:5.2') {
		exclude group: 'commons-io', module: 'commons-io'

		exclude group: 'com.twmacinta', module: 'fast-md5'
		exclude group: 'gov.nist.math', module: 'Jampack'
	}
	implementation('de.dfki.mary:voice-cmu-rms-hsmm:5.2') {
		exclude group: 'commons-io', module: 'commons-io'

		exclude group: 'com.twmacinta', module: 'fast-md5'
		exclude group: 'gov.nist.math', module: 'Jampack'
	}
	implementation('de.dfki.mary:voice-cmu-bdl-hsmm:5.2') {
		exclude group: 'commons-io', module: 'commons-io'

		exclude group: 'com.twmacinta', module: 'fast-md5'
		exclude group: 'gov.nist.math', module: 'Jampack'
	}
	implementation('de.dfki.mary:marytts-lang-en:5.2.1') {
		exclude group: 'commons-io', module: 'commons-io'
		exclude group: 'com.twmacinta', module: 'fast-md5'
		exclude group: 'gov.nist.math', module: 'Jampack'
	}

	implementation 'ai.djl:api:'
	implementation 'ai.djl.pytorch:pytorch-engine:0.22.1'
	implementation 'ai.djl.pytorch:pytorch-jni:2.0.0-0.22.1'
	implementation("ai.djl.onnxruntime:onnxruntime-engine:0.22.1")

	// https://mvnrepository.com/artifact/com.github.docker-java/docker-java
	implementation group: 'com.github.docker-java', name: 'docker-java', version: '3.3.0'
	implementation group: 'com.github.docker-java', name: 'docker-java-transport-okhttp', version: '3.3.0'
	// https://mvnrepository.com/artifact/com.github.docker-java/docker-java-transport-httpclient5
	implementation group: 'com.github.docker-java', name: 'docker-java-transport-httpclient5', version: '3.3.0'

	//MuJoCo
	implementation group: 'org.bytedeco', name: 'javacpp', version: '1.5.7'
	implementation group: 'com.neuronrobotics', name: 'mujoco-java', version:'3.1.3-pre.11'

	// https://mvnrepository.com/artifact/org.robokind/org.robokind.api.speech
	implementation group: 'org.robokind', name: 'org.robokind.api.speech', version: '0.9.5'

	// https://mvnrepository.com/artifact/net.lingala.zip4j/zip4j
	implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '2.11.5'
	// https://mvnrepository.com/artifact/com.alphacephei/vosk
	implementation( 'com.alphacephei:vosk:0.3.38') {
		exclude group: 'net.java.dev.jna', module: 'jna'
	}
	// Add OpenCV
	implementation 'org.openpnp:opencv:4.7.0-0'

	// https://mvnrepository.com/artifact/com.neuronrobotics/SimplePacketComsJava
	implementation group: 'com.neuronrobotics', name: 'SimplePacketComsJava', version: '1.0.0'
	// Zip and unzip, tar and untar
	implementation 'org.apache.commons:commons-compress:1.26.2'
	// Addiing advance system execution for advanced editors
	implementation 'org.apache.commons:commons-exec:1.3'

	implementation 'org.tukaani:xz:1.9'
	implementation 'org.brotli:dec:0.1.2'  // Add this for Brotli support
	// Add 7z native bindings
	implementation 'net.sf.sevenzipjbinding:sevenzipjbinding:16.02-2.01'
	implementation 'net.sf.sevenzipjbinding:sevenzipjbinding-all-platforms:16.02-2.01'
	// inkscape loading
	implementation group: 'org.apache.xmlgraphics', name: 'batik-all', version: '1.17'
}


// create a fat-jar (class files plus dependencies
// excludes VRL.jar (plugin jar files must not start with 'vrl-\\d+')
jar {
	jar.duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
		attributes(
				"Main-Class": 'com.neuronrobotics.bowlerstudio.BowlerKernel',
				"Manifest-Version": "1.0",
				"Created-By": "CommonWealth Cooperative",
				"Specification-Title": props."app.name",
				"Specification-Version": props."app.version",
				"Specification-Vendor": "CommonWealth Robotics Cooperative",
				"Implementation-Title": props."app.name",
				"Implementation-Version" : props."app.version",
				"Implementation-Vendor": "CommonWealth Robotics Cooperative"


				)
	}
}

shadowJar {
	zip64 true
	//mainClassName = 'com.neuronrobotics.bowlerstudio.BowlerKernel'
	if (project == rootProject) {
		baseName = 'bowler-kernel'
		classifier = ""
	}else {
		archiveBaseName.set('bowler-kernel')
		archiveClassifier.set('')
		archiveVersion.set('')
	}
	mergeServiceFiles()
}

group = "com.neuronrobotics"
archivesBaseName = "bowler-script-kernel"

task javadocJar(type: Jar) {
	if (project == rootProject)
		classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	if (project == rootProject)
		classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar, jar
}
test {
	testLogging {
		exceptionFormat = 'full'
	}
}
/*
 signing {
 sign configurations.archives
 }
 uploadArchives {
 repositories {
 mavenDeployer {
 beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
 repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
 authentication(userName: ossrhUsername, password: ossrhPassword)
 }
 snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
 authentication(userName: ossrhUsername, password: ossrhPassword)
 }
 pom.project {
 name 'Bowler Scripting Kernel'
 packaging 'jar'
 // optionally artifactId can be defined here
 description 'A command line utility for accsing the bowler framework.'
 url 'http://neuronrobotics.com'
 scm {
 connection 			'scm:git:https://github.com/NeuronRobotics/bowler-script-kernel.git'
 developerConnection 'scm:git:git@github.com:NeuronRobotics/bowler-script-kernel.git'
 url 'https://github.com/NeuronRobotics/bowler-script-kernel'
 }
 licenses {
 license {
 name 'The Apache License, Version 2.0'
 url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
 }
 }
 developers {
 developer {
 id 'madhephaestus'
 name 'Kevin Harrington'
 email 'kharrington@neuronrobotics.com'
 }
 }
 }
 }
 }
 }
 */

